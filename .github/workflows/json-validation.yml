name: JSON Validation

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - '**/*.json'
      - 'validator.js'
      - '.github/workflows/json-validation.yml'

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  validate-json:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm install
      
    - name: Start proxy server
      run: |
        # Start the proxy server in the background
        node proxy-server.js &
        sleep 5  # Wait for server to start
        echo "Proxy server started"
        
    - name: Run JSON validation
      id: validation
      run: |
        # Set environment variables for proxy usage
        export USE_PROXY=true
        export PROXY_URL=http://localhost:3000
        
        # Run the validator and capture output
        node validator.js > validation-output.txt 2>&1
        echo "validation_exit_code=$?" >> $GITHUB_OUTPUT
        
    - name: Process validation results
      id: process-results
      run: |
        if [ -s validation-output.txt ]; then
          # Read the validation output
          VALIDATION_OUTPUT=$(cat validation-output.txt)
          
          # Check if there are any errors
          if echo "$VALIDATION_OUTPUT" | grep -q "❌ JSON Validation Error"; then
            echo "has_errors=true" >> $GITHUB_OUTPUT
            echo "validation_output<<EOF" >> $GITHUB_OUTPUT
            echo "$VALIDATION_OUTPUT" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "has_errors=false" >> $GITHUB_OUTPUT
            echo "validation_output<<EOF" >> $GITHUB_OUTPUT
            echo "$VALIDATION_OUTPUT" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi
        else
          echo "has_errors=false" >> $GITHUB_OUTPUT
          echo "validation_output=No validation output found" >> $GITHUB_OUTPUT
        fi
        
    - name: Comment on PR with validation results
      if: steps.process-results.outputs.has_errors == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
          });
          
          // Check if we already commented on this PR
          const existingComment = comments.find(comment => 
            comment.user.type === 'Bot' && 
            comment.body.includes('## JSON Validation Results')
          );
          
          const commentBody = `## JSON Validation Results ❌
          
          The JSON validation found issues in your pull request. Please review and fix the following errors:
          
          \`\`\`
          ${process.env.VALIDATION_OUTPUT}
          \`\`\`
          
          ### How to fix:
          1. Review each error message carefully
          2. Check the line numbers and suggestions provided
          3. Fix the JSON syntax issues
          4. Push your changes to trigger re-validation
          
          ---
          *This comment was automatically generated by the JSON validation workflow.*`;
          
          if (existingComment) {
            // Update existing comment
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: existingComment.id,
              body: commentBody
            });
          } else {
            // Create new comment
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: commentBody
            });
          }
      env:
        VALIDATION_OUTPUT: ${{ steps.process-results.outputs.validation_output }}
        
    - name: Comment on PR with success message
      if: steps.process-results.outputs.has_errors == 'false'
      uses: actions/github-script@v7
      with:
        script: |
          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
          });
          
          // Check if we already commented on this PR
          const existingComment = comments.find(comment => 
            comment.user.type === 'Bot' && 
            comment.body.includes('## JSON Validation Results')
          );
          
          const commentBody = `## JSON Validation Results ✅
          
          All JSON files in this pull request are valid! No issues found.
          
          \`\`\`
          ${process.env.VALIDATION_OUTPUT}
          \`\`\`
          
          ---
          *This comment was automatically generated by the JSON validation workflow.*`;
          
          if (existingComment) {
            // Update existing comment
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: existingComment.id,
              body: commentBody
            });
          } else {
            // Create new comment
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: commentBody
            });
          }
      env:
        VALIDATION_OUTPUT: ${{ steps.process-results.outputs.validation_output }}
